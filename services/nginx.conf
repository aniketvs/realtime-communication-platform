user nobody;  # user that runs nginx worker processes (you can change this if required)
worker_processes 1;

events {
    worker_connections 1024;
}

http {
    include       mime.types;  # Include file types for handling various mime types
    default_type  application/octet-stream;  # Default MIME type for unknown files

    sendfile on;  # Enable sendfile for sending files
    keepalive_timeout 65;  # Timeout for persistent connections

    # HTTP server - Redirect all HTTP traffic to HTTPS
    server {
        listen 80;
        server_name localhost;

        # Redirect HTTP to HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }

    # HTTPS server - Serve services over HTTPS
    server {
        listen 443 ssl;
        server_name localhost;

        # SSL Certificate and Key
        ssl_certificate /etc/nginx/ssl/nginx.crt;
        ssl_certificate_key /etc/nginx/ssl/nginx.key;

        # SSL Settings (Optional but recommended)
        ssl_protocols TLSv1.2 TLSv1.3;  # Support for TLS 1.2 and 1.3
        ssl_ciphers 'HIGH:!aNULL:!MD5';  # Strong ciphers for security
        ssl_prefer_server_ciphers on;  # Ensure the server's ciphers are used over the client's

        # Serve static files (frontend HTML files)
        location / {
            root /Users/codeblock/Desktop/connect-app/services/template;  # Path to your HTML files
            index user_1.html;
            try_files $uri $uri/ /user_1.html;
        }
        location /user2.html {
            root /Users/codeblock/Desktop/connect-app/services/template;  # Path to your HTML files
            index user2.html;  # Serve user2.html if explicitly requested
        }

        # Proxy requests to auth-service
        location /auth/ {
            proxy_pass http://localhost:5005/;  # Proxy to auth-service on port 5005
            proxy_set_header Host $host;  # Forward original host header
            proxy_set_header X-Real-IP $remote_addr;  # Forward real client IP
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  # Forward the forwarded IP
            proxy_set_header X-Forwarded-Proto $scheme;  # Forward protocol (http or https)
        }

        # Proxy requests to data-service
        location /data/ {
            proxy_pass http://localhost:3005/;  # Proxy to data-service on port 3005
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Proxy requests to chat-gateway-service
        location /chat/ {
            proxy_pass http://localhost:3000/;

            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
    
            proxy_read_timeout 86400;
            proxy_send_timeout 86400;
        }


        # Proxy requests to notification-service
        location /notification/ {
            proxy_pass http://localhost:4001/;  # Proxy to notification-service on port 4001
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}

