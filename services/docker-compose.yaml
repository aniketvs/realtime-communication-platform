version: '3.8'

services:
  auth-service:
    build:
      context: .
      dockerfile: ./auth-service/Dockerfile
    ports:
      - "5005:5005"
    working_dir: /app/auth-service
    volumes:
      - ./auth-service:/app/auth-service
    command: npm run start
    depends_on:
      - zookeeper
      - kafka
      - mysql
      - redis

  notification-service:
   build:
    context: .
    dockerfile: ./notification-service/Dockerfile
   ports:
   - "4001:4001"
   working_dir: /app/notification-service
   volumes:
     - ./notification-service:/app/notification-service
   command: npm run start
   depends_on:
    - auth-service
    - zookeeper
    - kafka
    - mysql
    - redis
  
  chat-gateway-service:
   build:
    context: .
    dockerfile: ./chat-gateway-service/Dockerfile
   ports:
     - '3000:3000'
   working_dir: /app/chat-gateway-service
   volumes:
     - ./chat-gateway-service:/app/chat-gateway-service
   command: npm run start:dev
   depends_on:
    - kafka
    - redis

  data-service:
   build:
    context: .
    dockerfile: ./data-service/Dockerfile
   ports:
     - '3005:3005'
   working_dir: /app/data-service
   volumes:
     - ./data-service:/app/data-service
   command: npm run start:dev
   depends_on:
    - kafka
    - mysql
    - mongo
    - redis
    


  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

  mysql:
    image: mysql:8
    restart: always
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: connect_app
    volumes:
      - mysql_data:/var/lib/mysql

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    command: ["redis-server", "--notify-keyspace-events", "Ex"]
  mongo:
   image: mongo:latest
   ports:
      - "27017:27017"

volumes:
  mysql_data:
